version: "2.3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0
    restart: always
    hostname: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
    ports:
      - "2181:2181"

  kafka1:
    image: confluentinc/cp-enterprise-kafka:5.0.0
    hostname: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
      - "29091:29091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091,OUTSIDE://localhost:9091
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29091
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      CONFLUENT_METRICS_REPORTER_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
    healthcheck:
      test: ["CMD", "kafka-topics", "--zookeeper", "zookeeper:2181", "--list"]
      interval: 10s
      timeout: 10s
      retries: 3

  kafka2:
    image: confluentinc/cp-enterprise-kafka:5.0.0
    hostname: kafka2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_BROKER_RACK: "r2"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29092,OUTSIDE://localhost:9092
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29091
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      CONFLUENT_METRICS_REPORTER_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
    healthcheck:
      test: ["CMD", "kafka-topics", "--zookeeper", "zookeeper:2181", "--list"]
      interval: 10s
      timeout: 10s
      retries: 3

  kafka3:
    image: confluentinc/cp-enterprise-kafka:5.0.0
    hostname: kafka3
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_BROKER_RACK: "r3"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29093,OUTSIDE://localhost:9093
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:29091
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 2
      CONFLUENT_METRICS_REPORTER_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
    healthcheck:
      test: ["CMD", "kafka-topics", "--zookeeper", "zookeeper:2181", "--list"]
      interval: 10s
      timeout: 10s
      retries: 3      
  control-center:
    image: confluentinc/cp-enterprise-control-center:5.0.0
    container_name: control-center
    restart: always
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3      
    ports:
      - "9021:9021"
      - "9022:9022"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka1:29091,kafka2:29092,kafka3:29093"
      CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONTROL_CENTER_REPLICATION_FACTOR: 2
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 2
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 2
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 2
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 2
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 2
      CONTROL_CENTER_CONNECT_CLUSTER: "https://connect:8083"
      CONTROL_CENTER_KSQL_URL: "http://ksql-server:8088"
      CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "https://schema-registry:8085"
      CONTROL_CENTER_STREAMS_CONSUMER_REQUEST_TIMEOUT_MS: "960032"
      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: PLAINTEXT
      # HTTP and HTTPS to Control Center UI 
      CONTROL_CENTER_REST_LISTENERS: "http://0.0.0.0:9021,https://0.0.0.0:9022"
      CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
  schemaregistry:
    image: confluentinc/cp-schema-registry:5.0.0
    container_name: schema-registry
    restart: always
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3    
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_TOPIC_REPLICATION_FACTOR: 2 
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8085"
      SCHEMA_REGISTRY_SSL_CLIENT_AUTH: "false"
    ports:
      - 8085:8085      
  kafka-client:
    image: confluentinc/cp-enterprise-kafka:5.0.0
    hostname: kafka-client
    container_name: kafka-client
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy        
    command: "bash -c -a 'echo Waiting for Kafka to be ready... && \
                       /etc/confluent/docker/configure && \
                       cub kafka-ready -b kafka1:29091 1 60 && \
                       cub kafka-ready -b kafka2:29092 1 60 && \
                       cub kafka-ready -b kafka3:29093 1 60 && \
                       sleep 5 && \
                       kafka-topics --zookeeper zookeeper:2181 --topic data-in --create --replication-factor 2 --partitions 2 && \
                       kafka-topics --zookeeper zookeeper:2181 --topic data-text --create --replication-factor 2 --partitions 2 && \
                       kafka-topics --zookeeper zookeeper:2181 --topic data-json --create --replication-factor 2 --partitions 2 && \
                       kafka-topics --zookeeper zookeeper:2181 --topic data-avro --create --replication-factor 2 --partitions 2 && \
                       kafka-topics --zookeeper zookeeper:2181 --topic data-text-sink --create --replication-factor 2 --partitions 2 && \
                       kafka-topics --zookeeper zookeeper:2181 --topic test_out --create --replication-factor 2 --partitions 2 && \
                       sleep infinity'"
    environment:
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
      KAFKA_ADVERTISED_LISTENERS: ignored
